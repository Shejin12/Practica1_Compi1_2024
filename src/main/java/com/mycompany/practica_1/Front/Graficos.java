/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.practica_1.Front;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory;
import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;

/**
 *
 * @author cheji
 */
public class Graficos extends javax.swing.JFrame {

    /**
     * Creates new form Graficos
     */
    
    public Lectura lectura;
    private Graphics2D gd; 
    private BufferedImage im;
    
    public Graficos() {
        initComponents();
        im = new BufferedImage(900, 900, BufferedImage.TYPE_INT_ARGB);
        gd = im.createGraphics();
    }

    public void setLectura(Lectura lectura){
        this.lectura = lectura;
    }
    
    /*
    @Override
    public void paint(Graphics g){
        super.paint(g);
        g.setColor(new Color(154, 10, 156));
        g.drawLine(20, 100, 900, 350);
        
        g.drawString("Linea", 20, 100);
    }*/
    public void repintar(){
        Graphics g = jPanelFiguras.getGraphics();
        jPanelFiguras.paint(g);
        im = new BufferedImage(900, 900, BufferedImage.TYPE_INT_ARGB);
        gd = im.createGraphics();
    }
    
    public void graficarCirculo(int posx,int posy, int radio, Color color){
        Graphics g = jPanelFiguras.getGraphics();
        g.setColor(color);
        g.fillOval(posx, posy, radio*2, radio*2);
        gd.setColor(color);
        gd.fillOval(posx, posy, radio*2, radio*2);
    }
    
    public void graficarCuadrado(int posx,  int posy, int tamlado, Color color){
        Graphics g = jPanelFiguras.getGraphics();
        g.setColor(color);
        g.fillRect(posx, posy, tamlado, tamlado);
        gd.setColor(color);
        gd.fillRect(posx, posy, tamlado, tamlado);
    }
    
    public void graficarRectangulo(int posx, int posy, int ancho, int alto, Color color){
        Graphics g = jPanelFiguras.getGraphics();
        g.setColor(color);
        g.fillRect(posx, posy, ancho, alto);
        gd.setColor(color);
        gd.fillRect(posx, posy, ancho, alto);
    }
    
    public void graficarLinea(int x1, int y1,  int x2, int y2, Color color){
        Graphics g = jPanelFiguras.getGraphics();
        g.setColor(color);
        g.drawLine(x1, y1, x2, y2);
        gd.setColor(color);
        gd.drawLine(x1, y1, x2, y2);
        
    }
    
    public void graficarPoligono(int posx, int posy, int cantlados, int alto, int ancho, Color color){
        int []  ladosX = new int [cantlados];
        int []  ladosY = new int [cantlados];
        
        for(int i = 0; i<cantlados; i++){
            ladosX[i] = posx + (int)(ancho * Math.cos(2 * Math.PI * i / cantlados));
            ladosY[i] = posy + (int)(alto * Math.sin(2 * Math.PI * i / cantlados));
        }
        
        Graphics g = jPanelFiguras.getGraphics();
        g.setColor(color);
        g.fillPolygon(ladosX, ladosY, cantlados);
        gd.setColor(color);
        gd.fillPolygon(ladosX, ladosY, cantlados);
    }
    
    private String path(){
    String folderPath = "";
        JFileChooser fileChooser = new JFileChooser(FileSystemView.getFileSystemView().getFileSystemView().getHomeDirectory());
        
        // Configurar para seleccionar solo directorios
        fileChooser.setDialogTitle("Selecciona una carpeta");
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        // Deshabilitar la opci칩n "Todos los archivos"
        fileChooser.setAcceptAllFileFilterUsed(false);
        
        // Mostrar el di치logo para seleccionar carpeta
        int returnValue = fileChooser.showOpenDialog(null);
        
        // Comprobar si se seleccion칩 una carpeta
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFolder = fileChooser.getSelectedFile();
            
            folderPath = selectedFolder.getAbsolutePath();
            
            // Mostrar la ruta seleccionada
            System.out.println("Carpeta seleccionada: " + folderPath);
            return folderPath;
        } else {
            System.out.println("No se seleccion칩 ninguna carpeta.");
            return "";
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelFiguras = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        expPng = new javax.swing.JButton();
        expPdf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Graficos");

        javax.swing.GroupLayout jPanelFigurasLayout = new javax.swing.GroupLayout(jPanelFiguras);
        jPanelFiguras.setLayout(jPanelFigurasLayout);
        jPanelFigurasLayout.setHorizontalGroup(
            jPanelFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 586, Short.MAX_VALUE)
        );
        jPanelFigurasLayout.setVerticalGroup(
            jPanelFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanelFiguras);

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        expPng.setText("Exportar PNG");
        expPng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expPngActionPerformed(evt);
            }
        });

        expPdf.setText("Exportar PDF");
        expPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expPdfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(expPng)
                        .addGap(18, 18, 18)
                        .addComponent(expPdf)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(expPng)
                    .addComponent(expPdf))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        lectura.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void expPngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expPngActionPerformed
        // TODO add your handling code here:
        String folderPath = path();
        
        String rutaImagen = folderPath + "\\Formas.png"; 
        try {
            ImageIO.write(im, "png", new File(rutaImagen));
            System.out.println("El panel se ha exportado a " + rutaImagen);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_expPngActionPerformed

    private void expPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expPdfActionPerformed
        // TODO add your handling code here:
        String pth = path();

try (PDDocument document = new PDDocument()) {
            PDPage page = new PDPage();
            document.addPage(page);


            // Convertir BufferedImage a PDImageXObject
            PDImageXObject pdImage = LosslessFactory.createFromImage(document, im);
            PDPageContentStream contentStream = new PDPageContentStream(document, page);
            //contentStream.drawImage(pdImage, 20, 20);
            contentStream.drawImage(pdImage, 20, 20, 900, 900);
            contentStream.close();

            document.save(pth + "\\Formas.pdf");
            System.out.println("PDF creado en: " +pth + "\\Formas.pdf" );
        } catch (Exception e) {
            e.printStackTrace();
        }

        
    
    }//GEN-LAST:event_expPdfActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton expPdf;
    private javax.swing.JButton expPng;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanelFiguras;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
